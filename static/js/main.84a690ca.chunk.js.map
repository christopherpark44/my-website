{"version":3,"sources":["resources/ReactLogo.svg","resources/TypeScriptLogo.svg","resources/NodeLogo.png","resources/PythonLogo.png","resources/JavaLogo.png","resources/SetterLogo.png","resources/CIBCLogo.svg","resources/resume.png","components/header.tsx","components/common.tsx","pages/homepage.tsx","pages/projectspage.tsx","pages/resumepage.tsx","pages/contactpage.tsx","pages/aboutpage.tsx","pages/otherpage.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","HomeHead","styled","Card","NameHead","h1","RoleHead","h3","HomeHeader","Grid","container","direction","justify","alignItems","xs","PagesLink","Link","TabsBar","AppBar","SocialMediaLink","a","GlobalTabs","position","Box","display","flexDirection","justifyContent","to","Footer","href","PageHeader","PageName","IntroText","h2","DescriptionText","HomePage","src","require","alt","width","height","ProjectPage","ResumeImageContainer","div","ResumePage","ContactPage","AboutPage","OtherPage","App","className","path","component","ProjectsPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84a690ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ReactLogo.4009eef3.svg\";","module.exports = __webpack_public_path__ + \"static/media/TypeScriptLogo.3de182d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/NodeLogo.97015d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/PythonLogo.067050f6.png\";","module.exports = __webpack_public_path__ + \"static/media/JavaLogo.3d380d66.png\";","module.exports = __webpack_public_path__ + \"static/media/SetterLogo.d4366b66.png\";","module.exports = __webpack_public_path__ + \"static/media/CIBCLogo.e0788759.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.5dbea099.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst HomeHead = styled(Card)`\r\n    && {\r\n        color: white;\r\n        background-color: #ff4040;\r\n        padding: 1.2rem;\r\n    }\r\n` \r\n\r\nconst NameHead = styled.h1`\r\n    font-family: 'Comfortaa';\r\n    font-size: 60px;\r\n`\r\n\r\nconst RoleHead = styled.h3`\r\n    font-family: 'Alata';\r\n    font-size: 18px;\r\n`\r\n\r\nexport default function HomeHeader() {\r\n    return (\r\n        <HomeHead>\r\n            <NameHead>\r\n                Christopher Park\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\r\n                    <Grid xs={4}>\r\n                        <RoleHead>University of Waterloo Math 2nd Year Student</RoleHead>\r\n                    </Grid>\r\n                    <Grid xs={4}>\r\n                        <RoleHead>Full Stack Software Developer</RoleHead>\r\n                    </Grid>\r\n                    <Grid xs={4}>\r\n                        <RoleHead>Software QA Engineer</RoleHead>\r\n                    </Grid>\r\n                </Grid>\r\n            </NameHead>\r\n        </HomeHead>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nexport interface Props {\r\n    PageName: string;\r\n}\r\n\r\nconst HomeHead = styled(Card)`\r\n    && {\r\n        color: white;\r\n        background-color: #ff4040;\r\n        padding: 3.1rem;\r\n    }\r\n` \r\n\r\nconst NameHead = styled.h1`\r\n    font-family: 'Comfortaa';\r\n    font-size: 60px;\r\n`\r\n\r\nconst PagesLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: black;\r\n    width: 15rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    &:hover {\r\n        background-color: #ff4040;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst TabsBar = styled(AppBar)`\r\n    && {\r\n        background-color: white;\r\n    }\r\n`\r\n\r\nconst SocialMediaLink = styled.a`\r\n    text-decoration: none;\r\n    padding: 1rem;\r\n    margin: 2rem;\r\n    color: white;\r\n    background-color: #4287f5;\r\n    border: 2px solid #4287f5;\r\n    border-radius: 25px;\r\n`\r\n\r\n\r\nexport function GlobalTabs() {   \r\n    return (\r\n        <TabsBar position = \"sticky\">\r\n            <nav>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <PagesLink to = \"/\"> Home </PagesLink>\r\n                    <PagesLink to = \"/projects\"> Projects </PagesLink>\r\n                    <PagesLink to = \"/resume\"> Resume </PagesLink>\r\n                    <PagesLink to = \"/contact\"> Contact </PagesLink>\r\n                    <PagesLink to = \"/about\"> About </PagesLink>\r\n                    <PagesLink to = \"/other\"> Other </PagesLink>  \r\n                </Box> \r\n            </nav>\r\n        </TabsBar>\r\n    )\r\n}\r\n\r\nexport function Footer() {\r\n    return (\r\n        <Box display=\"inline-block\">\r\n            <span>\r\n                <SocialMediaLink href=\"https://github.com/christopherpark88\">\r\n                <GitHubIcon/>GitHub</SocialMediaLink>\r\n            </span>\r\n            <span>\r\n                <SocialMediaLink href=\"https://www.linkedin.com/in/christopher-park-1160b0164/\">\r\n                <LinkedInIcon/>LinkedIn</SocialMediaLink>\r\n            </span>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport function PageHeader ({ PageName } : Props) {\r\n    return (\r\n        <HomeHead>\r\n            <NameHead>\r\n               {PageName}\r\n            </NameHead>\r\n         </HomeHead>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport HomeHeader from '../components/header';\r\nimport { GlobalTabs , Footer} from '../components/common';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\nconst IntroText = styled.h2`\r\n    font-family: 'Oswald';\r\n    font-size: 50px;\r\n`\r\n\r\nconst DescriptionText = styled.h1`\r\n    font-family: 'Oswald';\r\n    font-size: 30px;\r\n`\r\n\r\nexport default function HomePage() {\r\n    return (\r\n            <div>\r\n                <HomeHeader/>\r\n                <GlobalTabs/>\r\n                <br/>\r\n                <Card>\r\n                    <IntroText>\r\n                        Hi, my name is Christopher. \r\n                    </IntroText>\r\n                    <DescriptionText>\r\n                        I'm a 2nd year University of Waterloo Mathematics Program Student and Software Developer\r\n                    </DescriptionText>\r\n                    <br/>\r\n                    <IntroText>\r\n                        Programming Languages\r\n                    </IntroText>\r\n                    <img src={require('../resources/ReactLogo.svg')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                    <img src={require('../resources/TypeScriptLogo.svg')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                    <img src={require('../resources/NodeLogo.png')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                    <img src={require('../resources/PythonLogo.png')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                    <img src={require('../resources/JavaLogo.png')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n\r\n                    <IntroText>\r\n                        Work Experiences\r\n                    </IntroText>\r\n                    <img src={require('../resources/SetterLogo.png')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                    <img src={require('../resources/CIBCLogo.svg')} alt=\"Cannot Load\" width=\"50\" height=\"50\"/>\r\n                </Card>\r\n                <br/>\r\n                <Footer/>\r\n            </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { GlobalTabs , PageHeader } from '../components/common';\r\n\r\nexport default function ProjectPage() {\r\n    return (\r\n        <div>\r\n            <PageHeader PageName = \"My Project\"/>\r\n            <GlobalTabs/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { GlobalTabs , PageHeader } from '../components/common';\r\nimport styled from 'styled-components';\r\n\r\nconst ResumeImageContainer = styled.div`\r\n    && {\r\n        margin: 20px;\r\n`\r\n\r\nexport default function ResumePage () {\r\n    return (\r\n        <div>\r\n            <PageHeader PageName = \"My Resume\"/>\r\n            <GlobalTabs/>\r\n            <br/>\r\n            <ResumeImageContainer>\r\n                <img src={require('../resources/resume.png')} alt=\"Cannot Load\" width=\"800\" height=\"1100\"/>\r\n            </ResumeImageContainer>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { GlobalTabs , PageHeader } from '../components/common';\r\n\r\nexport default function ContactPage () {\r\n    return (\r\n        <div>\r\n            <PageHeader PageName = \"My Contact\"/>\r\n            <GlobalTabs/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { GlobalTabs , PageHeader } from '../components/common';\r\n\r\nexport default function AboutPage () {\r\n    return (\r\n        <div>\r\n            <PageHeader PageName = \"About\"/>\r\n            <GlobalTabs/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { GlobalTabs , PageHeader } from '../components/common';\r\n\r\nexport default function OtherPage () {\r\n    return (\r\n        <div>\r\n            <PageHeader PageName = \"Other\"/>\r\n            <GlobalTabs/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css'; \r\nimport HomePage from './pages/homepage'\r\nimport ProjectsPage from './pages/projectspage';\r\nimport ResumePage from './pages/resumepage';\r\nimport ContactPage from './pages/contactpage';\r\nimport AboutPage from './pages/aboutpage';\r\nimport OtherPage from './pages/otherpage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>        \r\n          <Route path=\"/projects\" component={ProjectsPage}></Route>\r\n          <Route path=\"/resume\" component={ResumePage}></Route>\r\n          <Route path=\"/contact\" component={ContactPage}></Route>\r\n          <Route path=\"/about\" component={AboutPage}></Route>\r\n          <Route path=\"/other\" component={OtherPage}></Route>\r\n          <Route path=\"/\" component={HomePage}></Route>  \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}